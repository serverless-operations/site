{"hash":"7d8cc78e1b8fcf6bb367080efcae4f8df6dfb6c5","data":{"wordPressBlog":{"title":"Serverless Framework Enterpriseで快適なサーバレスアーキテクチャの開発と運用を行おう","content":"\n<figure class=\"wp-block-image\"><a href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F65478%2F65a640fc-1b38-5652-46aa-e61f7d25e188.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=be5396121f3cbce1d506180eb0ef0cd1\" target=\"_blank\" rel=\"noreferrer noopener\"><img decoding=\"async\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F65478%2F65a640fc-1b38-5652-46aa-e61f7d25e188.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=be5396121f3cbce1d506180eb0ef0cd1\" alt=\"Screen Shot 2019-06-08 at 16.24.20.png\"/></a></figure>\n\n\n\n<p><a href=\"https://serverless.com/enterprise/\" rel=\"noreferrer noopener\" target=\"_blank\">Serverless Framework Enterprise</a>とは、サーバーレスアーキテクチャでの開発や運用をより簡単に、よりスピーディーに行うことを支援するためのダッシュボードです。</p>\n\n\n\n<p>Serverless Frameworkでデプロイを行ったマイクロサービスに対して、様々な支援機能をダッシュボードで提供します。</p>\n\n\n\n<p>以下のような機能が提供されています。</p>\n\n\n\n<h3 class=\"wp-block-heading\">Serverless Insights</h3>\n\n\n\n<p>いわゆるモニタリングのための機能です。現状ではLambdaの実行時間や実行数、エラーの状況をモニタリングできます</p>\n\n\n\n<h3 class=\"wp-block-heading\">Serverless Safeguards</h3>\n\n\n\n<p>デプロイ時にセキュリティの観点から問題がある設定になってないかをチェックしてくれます。例えば、IAM Roleに<code>*</code>つかってないかとか、トークンのようなものを設定ファイルに直書きしてないかとか、あとはデプロイするstageやregionを制限することも出来ます。これらのチェック項目はそれぞれ自由に設定ができます。</p>\n\n\n\n<h3 class=\"wp-block-heading\">Serverless Secrets</h3>\n\n\n\n<p>セキュアなトークンを暗号化して保持する機能です。AWSのSSM Secret Parametor Storeと同じような機能ですが、より簡単に使えるようになっています。serverless.ymlファイルから<code>${secrets:&lt;key&gt;}</code>といった書き方でどこからでもアクセスが可能になります。</p>\n\n\n\n<h3 class=\"wp-block-heading\">Serverless AWS Access Roles</h3>\n\n\n\n<p>デプロイ用のIAM Roleをダッシュボードに登録することで、ローカルにクレデンシャルを保持しなくてもデプロイが可能になります。ダッシュボードからユーザを発行して、そのユーザでローカルのPC上でログインするだけで、デプロイが出来るようになります。チームで開発するためには非常に便利な機能です。</p>\n\n\n\n<h2 class=\"wp-block-heading\">インストール</h2>\n\n\n\n<p>まずは、<a href=\"https://dashboard.serverless.com/\" rel=\"noreferrer noopener\" target=\"_blank\">ダッシュボード</a>にアクセスをしてアカウントを作成しましょう。</p>\n\n\n\n<figure class=\"wp-block-image\"><a href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F65478%2Fda7921c8-feff-3a43-d72a-81cc5f287a89.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=e7cb624799680dd425bda901a1d8b9e7\" target=\"_blank\" rel=\"noreferrer noopener\"><img decoding=\"async\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F65478%2Fda7921c8-feff-3a43-d72a-81cc5f287a89.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=e7cb624799680dd425bda901a1d8b9e7\" alt=\"Screen Shot 2019-06-08 at 18.04.16.png\"/></a></figure>\n\n\n\n<p>すると自分自身のスペースである<code>tenant</code>が出来ますので、まずはapplicationを登録します。<br>applicationが登録できたら、次はServerless Application側の設定を行っていきます。</p>\n\n\n\n<p>自身のServerless ApplicationにてServerless enterpriseプラグインを以下のコマンドでインストールしてください。</p>\n\n\n\n<pre class=\"wp-block-code kanguage-ssh\"><code>$ serverless plugin install -n @serverless/enterprise-plugin</code></pre>\n\n\n\n<p>serverless.ymlファイルのpluginsセクションに以下のような記述があればインストール成功です。</p>\n\n\n\n<pre class=\"wp-block-code language-ssh\"><code>plugins:\n  - '@serverless/enterprise-plugin'</code></pre>\n\n\n\n<p>そして自身のtenant名とapplication名を追記してください。</p>\n\n\n\n<pre class=\"wp-block-code language-yaml\"><code>tenant: horike37\napp: serverless-realtime-ranking\nservice: realtime-ranking\n\nprovider:\n  name: aws\n  runtime: nodejs10.x\n  stage: dev</code></pre>\n\n\n\n<p>コマンドラインからログインしてください。ブラウザが立ち上がってコマンドライン上でもログイン状態となります。</p>\n\n\n\n<pre class=\"wp-block-code language-ssh\"><code>$ serverless login</code></pre>\n\n\n\n<p>そしてデプロイしましょう</p>\n\n\n\n<pre class=\"wp-block-code language-ssh\"><code>$ serverless deploy</code></pre>\n\n\n\n<p>デプロイに成功すれば以下用にダッシュボードから確認ができるようになります。</p>\n\n\n\n<figure class=\"wp-block-image\"><a href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F65478%2F33b37c55-4a6b-3509-0152-654c8f6cbd83.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=177b2b2394003f38be0bbc96f27e351f\" target=\"_blank\" rel=\"noreferrer noopener\"><img decoding=\"async\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F65478%2F33b37c55-4a6b-3509-0152-654c8f6cbd83.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=177b2b2394003f38be0bbc96f27e351f\" alt=\"Screen Shot 2019-06-08 at 18.12.24.png\"/></a></figure>\n\n\n\n<figure class=\"wp-block-image\"><a href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F65478%2F840887cf-b0e1-e9ec-0b47-5906e63d2774.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=3df5b660f5006eb5e9996537f9e9a9a1\" target=\"_blank\" rel=\"noreferrer noopener\"><img decoding=\"async\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F65478%2F840887cf-b0e1-e9ec-0b47-5906e63d2774.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=3df5b660f5006eb5e9996537f9e9a9a1\" alt=\"Screen Shot 2019-06-08 at 18.12.53.png\"/></a></figure>\n\n\n\n<h2 class=\"wp-block-heading\">ダッシュボードから確認が出来るもの</h2>\n\n\n\n<h3 class=\"wp-block-heading\">エラー発生時のstack trace</h3>\n\n\n\n<p>この機能はかなり便利だと感じています。Lambdaのエラーが何件発生しているかはダッシュボードから確認できるのですが、それらをクリックすることでソース上のどこでどのようなエラーが発生しているのか明確に見れることが出来ます。</p>\n\n\n\n<p>かなりデバッグや本番環境下でのエラーの除去に有用な機能じゃないでしょうか。</p>\n\n\n\n<figure class=\"wp-block-image\"><a href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F65478%2Fbd3e33e7-8536-6d22-319e-e3560d5f23d1.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=3e655c3c46abe5d5379f95b2298055db\" target=\"_blank\" rel=\"noreferrer noopener\"><img decoding=\"async\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F65478%2Fbd3e33e7-8536-6d22-319e-e3560d5f23d1.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=3e655c3c46abe5d5379f95b2298055db\" alt=\"Screen Shot 2019-06-08 at 18.20.15.png\"/></a></figure>\n\n\n\n<figure class=\"wp-block-image\"><a href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F65478%2Fa2eb2a5c-b8c3-526c-36cd-a24b54a22f3c.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=6507916e5932e3b3a80367bf7fe46902\" target=\"_blank\" rel=\"noreferrer noopener\"><img decoding=\"async\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F65478%2Fa2eb2a5c-b8c3-526c-36cd-a24b54a22f3c.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=6507916e5932e3b3a80367bf7fe46902\" alt=\"Screen Shot 2019-06-08 at 18.20.37.png\"/></a></figure>\n\n\n\n<h3 class=\"wp-block-heading\">エンドポイントの情報</h3>\n\n\n\n<p>API Gatewayを上げた時のエンドポイントのURLが確認できます。エンドポイントのURLって結構確認が大変なので地味に便利な機能じゃないでしょうか。</p>\n\n\n\n<figure class=\"wp-block-image\"><a href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F65478%2F0ce20106-dedb-2cfe-8098-a0ddaa6a2b67.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=78bf85b2a2ca46c0b647653a82394034\" target=\"_blank\" rel=\"noreferrer noopener\"><img decoding=\"async\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F65478%2F0ce20106-dedb-2cfe-8098-a0ddaa6a2b67.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=78bf85b2a2ca46c0b647653a82394034\" alt=\"Screen Shot 2019-06-08 at 18.25.44.png\"/></a></figure>\n\n\n\n<h2 class=\"wp-block-heading\">profilesの設定</h2>\n\n\n\n<p>profileを作成して、それをServerless Applicationに紐付けることで、Applicationごとにセキュリティの設定やSecretパラメータやIAM Roleを切り替えることが出来ます。</p>\n\n\n\n<h3 class=\"wp-block-heading\">IAM Role</h3>\n\n\n\n<figure class=\"wp-block-image\"><a href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F65478%2F93f5da2e-8242-6ec6-db9a-0c1998cb79af.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=47ac87e5720cb720810ee469ce397bf5\" target=\"_blank\" rel=\"noreferrer noopener\"><img decoding=\"async\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F65478%2F93f5da2e-8242-6ec6-db9a-0c1998cb79af.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=47ac87e5720cb720810ee469ce397bf5\" alt=\"Screen Shot 2019-06-08 at 18.31.17.png\"/></a></figure>\n\n\n\n<h3 class=\"wp-block-heading\">safegurd policy</h3>\n\n\n\n<figure class=\"wp-block-image\"><a href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F65478%2F243c0a14-73bf-a480-f203-d13a88469d46.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=76b14f3781fd573aea67b284fd88fbcb\" target=\"_blank\" rel=\"noreferrer noopener\"><img decoding=\"async\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F65478%2F243c0a14-73bf-a480-f203-d13a88469d46.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=76b14f3781fd573aea67b284fd88fbcb\" alt=\"Screen Shot 2019-06-08 at 18.31.58.png\"/></a></figure>\n\n\n\n<h3 class=\"wp-block-heading\">secret store</h3>\n\n\n\n<figure class=\"wp-block-image\"><a href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F65478%2Fc9afa25b-b162-19d8-51cd-6f426703292b.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=bfd20fa9adc6c8561a2e7ae36d702603\" target=\"_blank\" rel=\"noreferrer noopener\"><img decoding=\"async\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F65478%2Fc9afa25b-b162-19d8-51cd-6f426703292b.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=bfd20fa9adc6c8561a2e7ae36d702603\" alt=\"Screen Shot 2019-06-08 at 18.32.29.png\"/></a></figure>\n\n\n\n<h2 class=\"wp-block-heading\">teamに開発者を招待する</h2>\n\n\n\n<p>チームで開発や運用を実施したい場合はその人用のダッシュボードのアカウントを作成して招待すれば、そのServerless Applicationの管理デプロイをAWSのアクセスキーを発行することなく実施できます。</p>\n\n\n\n<p>Serverless Framework自体はAdministratorの権限を付与することを推奨していますが、これはチーム開発の観点からするとあまり良くありません。しかし、ここからチームに招待することで、Serverless Frameworkで可能なコマンドでアクセスできるリソースにしかアクセスできません。また、退職などでチームから抜ければアカウントをremoveるだけでよいので、よりセキュアにより簡潔にチーム開発が出来るのではないでしょうか。<br><a href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F65478%2F8b66e7f9-2c82-8e40-f6eb-9eeb7ce11309.png?ixlib=rb-1.2.2&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=fe282696d3a807213c594efc2634572d\" target=\"_blank\" rel=\"noreferrer noopener\"></a></p>\n\n\n\n<h2 class=\"wp-block-heading\">全体的な感想</h2>\n\n\n\n<p>まだまだ、バージョンも0.1と成熟は仕切っていないですが、非常にUIが使いやすくこれからの成長が楽しみです。<br>ただ、特にモニタリングの機能がFunctionとeventにフォーカスがあたっていて、もう少しServerless Application全体の構成やイベントのトレーシング、マイクロサービス間の依存関係などが可視化できればより良いんじゃないかと思いました。</p>\n\n\n\n<p>さらにここ最近ではどんどんLambdaを書かずにマネージドサービスに処理を任せていく流れが出来てきています。<br>そういった意味では、モニタリング項目はLambdaだけでなくDynamoDBのスループットやスロットリングの項目なども必要になるでしょう。</p>\n\n\n\n<p>それらの機能が実装されてCloud2.0時代に必要なツールとなるようフィードバックしていければと考えています。</p>\n","author":{"name":"Takahiro Horike","description":"Co-founder and CEO of Serverless Operations, Inc","avatars":{"avatar96":"https://secure.gravatar.com/avatar/2ee9db3a5b6c492acf66ec14c8a5d8dc?s=96&d=mm&r=g"},"acf":{"userJpName":"堀家 隆宏","userRole":"CEO","facebook":"https://www.facebook.com/horike.takahiro","twitter":"https://twitter.com/horike37","github":"https://github.com/horike37"}},"date":"2019.06.08","path":"/blog/47/","featuredMedia":{"sourceUrl":"https://cdn.getshifter.co/f6642def64a63651c07142605e040674c5441f6d/uploads/2019/06/https___qiita-image-store.s3.ap-northeast-1.amazonaws.com_0_65478_65a640fc-1b38-5652-46aa-e61f7d25e188.png","altText":"","mediaDetails":{"width":2162}},"categories":[{"id":"7","title":"Blog","path":"/category/blog/"}],"tags":[{"id":"11","title":"Serverless Framework","path":"/tag/serverless-framework/"}]},"metadata":{"siteName":"Serverless Operations","siteDescription":"Serverless Operationsは、これまでグローバルの第一線で培ってきたクラウド技術（AWS − アマゾンウェブサービス）の豊富な実績と知見を活かし、お客さまのサーバーレスによる開発や運用の支援、コンサルティングまで一貫してサポート。サーバーレスに関するさまざまな課題を解決いたします。","siteUrl":"https://serverless.co.jp","siteOgImage":"https://serverless.co.jp/ogp.png"}},"context":{}}