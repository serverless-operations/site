{"hash":"35053359aff549c8e1d81009f00eae950570ae45","data":{"wordPressBlog":{"title":"AWSマーケットプレイスへSaaSプロダクトを掲載するために必要な作業まとめ","content":"\n<p>弊社では、サーバーレスにフォーカスしたコストマネジメントSaaS、<a rel=\"noreferrer noopener\" href=\"http://costless.io/ja\" data-type=\"URL\" data-id=\"http://costless.io/ja\" target=\"_blank\">Costless</a>をAWSマーケットプレイスに掲載しました。本記事はそのために行ってきた作業の内容について整理します。</p>\n\n\n\n<h2 class=\"wp-block-heading\">料金モデルの選定</h2>\n\n\n\n<p><a rel=\"noreferrer noopener\" href=\"https://aws.amazon.com/marketplace/management/tour\" data-type=\"URL\" data-id=\"https://aws.amazon.com/marketplace/management/tour\" target=\"_blank\">AWSマーケットプレイスポータル</a>（AMMP）で販売者登録と口座登録の手続きを済ませると、SaaSプロダクトの価格体系に合わせて以下のいずれかの料金モデルを選択し製品登録を行います。SaaS側はそれに合わせてマーケットプレイスとSaaSプロダクトとのインテグレーションを実装する形になります。</p>\n\n\n\n<figure class=\"wp-block-table is-style-stripes\"><table><tbody><tr><td>料金モデル</td><td>説明</td></tr><tr><td>SaaSサブスクリプション</td><td>いわゆる従量課金制モデルで、SaaSプロダクトを時間単位での利用に基づいて課金するといった場合に適しています。</td></tr><tr><td>SaaS契約</td><td>事前に決まった金額を支払いして一定期間SaaS製品を利用する形態の料金モデルです。</td></tr><tr><td>SaaS契約（従量課金あり）</td><td>SaaS 契約に加え、更に従量課金のオプションを混合することができるモデルです。最も多くのタイプの料金プランを実現できます。SaaS サブスクリプションとSaaS契約の両方をカバーできるので将来的にはおすすめの料金モデルですが、その分他に比べて実装の手間も増えることになります。</td></tr></tbody></table></figure>\n\n\n\n<h2 class=\"wp-block-heading\">顧客登録及びSaaSプロダクトとの紐付け</h2>\n\n\n\n<p>顧客がマーケットプレイスの製品ページを開いて登録（Subscribe）ボタンを押した時にリダイレクトされる、SaaS側のランディングページを用意します。顧客名、連絡先、会社名など適宜必要な顧客情報を入力してもらい、SaaS側に連携します。</p>\n\n\n\n<p>ここで、ランディングページが開く際、マーケットプレイス側よりカスタマーID、プロダクトコードといった情報と引き換えるためのトークンを付加してリダイレクトしてくれます。SaaS側はこのトークンを受け取り、マーケットプレイスのResolveCustomerというAPIを呼び出してカスタマーIDを取得、SaaS側のユーザー情報及び各機能などが制御できるように統合します。</p>\n\n\n\n<p>「SaaS契約」の場合、更にEntitlementという契約情報を登録、管理する必要があります。DynamoDBを利用すると良いでしょう。</p>\n\n\n\n<h2 class=\"wp-block-heading\">各種サブスクリプション状態の管理</h2>\n\n\n\n<p>顧客がマーケットプレイスでサブスクリプションの登録／解除や契約変更を行った場合、予めマーケットプレイス側から用意される専用SNSトピックにその状態が通知されます。</p>\n\n\n\n<p>具体的にはSaaS契約の場合 <code>entitlement-updated</code> , SaaSサブスクリプションの場合４パターン（ <code>subscribe-success</code>, <code>subscribe-fail</code>, <code>unsubscribe-pending</code>, <code>unsubscribe-success</code> ）の状態が通知されます。SaaS側ではこれらの状態変更の通知を受け適宜対応する形になります。</p>\n\n\n\n<h2 class=\"wp-block-heading\">従量課金処理の対応</h2>\n\n\n\n<p>SaaSサブスクリプションとSaaS契約の従量課金を実装したい場合、１時間ごとにユーザーの使用量に対する課金単位（ユニット）をマーケットプレイス側に送信する必要があります。製品登録時に構成した料金区分に合わせて課金単位の量を計算し、BatchMeterUsageという API を利用して送信します。</p>\n\n\n\n<h2 class=\"wp-block-heading\">AWSマーケットプレイスチームによるE2Eテスト</h2>\n\n\n\n<p>ここまで来たら、マーケットプレイスと統合するための作業は一通り完了します。最後に、AWSマーケットプレイスチームへ進捗を連絡すると、製品レビューとE2Eテストが実施されます。公式ドキュメントの「<a rel=\"noreferrer noopener\" href=\"https://docs.aws.amazon.com/ja_jp/marketplace/latest/userguide/aws-marketplace-integration-checklist.html\" data-type=\"URL\" data-id=\"https://docs.aws.amazon.com/ja_jp/marketplace/latest/userguide/aws-marketplace-integration-checklist.html\" target=\"_blank\">SaaS製品チェックリスト</a>」を参考に、抜け漏れがないかチェックしましょう。無事テストが通れば、公開日を設定してリリースとなります。</p>\n\n\n\n<h2 class=\"wp-block-heading\">まとめ</h2>\n\n\n\n<p>マーケットプレイス統合において、必要となる作業を簡単にまとめると以下のようになります。</p>\n\n\n\n<ul id=\"block-ca23dd63-f024-436b-a1af-735b6dcfef8a\"><li>料金モデルの選定</li><li>顧客登録及びSaaSプロダクトとの紐付け</li><li>各種サブスクリプション状態の管理</li><li>従量課金処理の対応</li><li>AWSマーケットプレイスチームによるE2Eテスト</li></ul>\n\n\n\n<p>統合を行う際に必要となるAWSリソースと構成について、AWSマーケットプレイスチームが公開している<a rel=\"noreferrer noopener\" href=\"https://github.com/aws-samples/aws-marketplace-serverless-saas-integration\" data-type=\"URL\" data-id=\"https://github.com/aws-samples/aws-marketplace-serverless-saas-integration\" target=\"_blank\">サンプル</a>がありますので、ご参考ください。フルサーバーレス構成で構築可能です。紫の丸がSaaS契約、オレンジの丸がSaaSサブスクリプションで必要となるリソースとなります。</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"1024\" height=\"675\" src=\"https://cdn.getshifter.co/f6642def64a63651c07142605e040674c5441f6d/uploads/2020/12/Serverless-MP-1024x675.png\" alt=\"\" class=\"wp-image-285\" srcset=\"https://cdn.getshifter.co/f6642def64a63651c07142605e040674c5441f6d/uploads/2020/12/Serverless-MP-1024x675.png 1024w, https://cdn.getshifter.co/f6642def64a63651c07142605e040674c5441f6d/uploads/2020/12/Serverless-MP-300x198.png 300w, https://cdn.getshifter.co/f6642def64a63651c07142605e040674c5441f6d/uploads/2020/12/Serverless-MP-768x506.png 768w, https://cdn.getshifter.co/f6642def64a63651c07142605e040674c5441f6d/uploads/2020/12/Serverless-MP.png 1327w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>※ &#8220;<a class=\"\" href=\"https://github.com/aws-samples/aws-marketplace-serverless-saas-integration\">aws-marketplace-serverless-saas-integration</a>&#8221; より抜粋</figcaption></figure>\n\n\n\n<p>Serverless Operationsでは、今回の構築経験を基にマーケットプレイスへの掲載に必要な統合の設計・開発の支援を行っています。お気軽に<a rel=\"noreferrer noopener\" href=\"https://serverless.co.jp/contact\" data-type=\"URL\" data-id=\"https://serverless.co.jp/contact\" target=\"_blank\">お問い合わせ</a>ください。</p>\n","author":{"name":"Sonu Kim","description":"","avatars":{"avatar96":"https://secure.gravatar.com/avatar/5b527696e38c84c34048954d767b1537?s=96&d=mm&r=g"},"acf":{"userJpName":"金 仙優","userRole":"COO","facebook":"","twitter":"","github":""}},"date":"2020.12.07","path":"/blog/284/","featuredMedia":{"sourceUrl":"https://cdn.getshifter.co/f6642def64a63651c07142605e040674c5441f6d/uploads/2020/05/so-release.png","altText":"so-release-image","mediaDetails":{"width":1200}},"categories":[{"id":"7","title":"Blog","path":"/category/blog/"}],"tags":[{"id":"8","title":"AWS","path":"/tag/aws/"},{"id":"33","title":"marketplace","path":"/tag/marketplace/"},{"id":"34","title":"SaaS","path":"/tag/saas/"},{"id":"2","title":"Serverless","path":"/tag/serverless/"}]},"metadata":{"siteName":"Serverless Operations","siteDescription":"Serverless Operationsは、これまでグローバルの第一線で培ってきたクラウド技術（AWS − アマゾンウェブサービス）の豊富な実績と知見を活かし、お客さまのサーバーレスによる開発や運用の支援、コンサルティングまで一貫してサポート。サーバーレスに関するさまざまな課題を解決いたします。","siteUrl":"https://serverless.co.jp","siteOgImage":"https://serverless.co.jp/ogp.png"}},"context":{}}