{"hash":"e5bf1eed04e22915fe60df772657de15feda3786","data":{"wordPressBlog":{"title":"軽量で簡単に使えるキャッシュSaaS、MomentoをAWS Lambdaから使ってみる","content":"\n<figure class=\"wp-block-image size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"1024\" height=\"537\" src=\"https://cdn.getshifter.co/f6642def64a63651c07142605e040674c5441f6d/uploads/2022/03/ImD_IR5F-1024x537.jpeg\" alt=\"\" class=\"wp-image-454\" srcset=\"https://cdn.getshifter.co/f6642def64a63651c07142605e040674c5441f6d/uploads/2022/03/ImD_IR5F-1024x537.jpeg 1024w, https://cdn.getshifter.co/f6642def64a63651c07142605e040674c5441f6d/uploads/2022/03/ImD_IR5F-300x157.jpeg 300w, https://cdn.getshifter.co/f6642def64a63651c07142605e040674c5441f6d/uploads/2022/03/ImD_IR5F-768x403.jpeg 768w, https://cdn.getshifter.co/f6642def64a63651c07142605e040674c5441f6d/uploads/2022/03/ImD_IR5F.jpeg 1200w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><figcaption>Momento</figcaption></figure>\n\n\n\n<p><a href=\"https://www.momentohq.com/\">Momento</a>はフルスケーラブルで簡単に使うことが出来るキャッシュサービスです。AWSのDynamoDBやS3のように事前の準備やサイジング、スケールへの心配なく、キャッシュストアを簡単にプロビジョニングするだけですぐに書き込みや読み込みが可能になります。いわゆるフルサーバーレスなキャッシュサービスですね。</p>\n\n\n\n<p>少し前までは米国リージョンを中心に展開されていましたが、最近、東京リージョンでサービスがリリースされたとのことです。</p>\n\n\n\n<p>AWSでサーバーレスな開発を普段してる方は感じているかもしれませんが、AWS Lambdaから使いやすいキャッシュストアが欲しくなるケースは結構あります。例えば以下のようなケースです。</p>\n\n\n\n<ul><li>ハイトラフィックなシステムの場合に、Rate Limit対策として外部APIのレスポンス結果をキャッシュさせてLambda間で使い回す</li><li>セッションデータなどをLambda間で共有する</li></ul>\n\n\n\n<p>この記事では実際にLambdaでMomentoを使ってこれらのユースケースに使えそうか見ていきましょう。</p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"アカウントの発行\">アカウントの発行</h2>\n\n\n\n<p>ローカルにCLIをインストールしてサインアップします。GitHub上に<a href=\"https://github.com/momentohq/momento-cli/blob/main/README.md\">CLIのドキュメント</a>があるので本記事ではこれを参考にしています。まずはbrewでMomentoのCLIを以下のようにインストールしましょう。</p>\n\n\n\n<pre class=\"wp-block-code language-shellsession\"><code>brew tap momentohq/tap\nbrew install momento-cli</code></pre>\n\n\n\n<p>その後サインアップのコマンドを実行すると登録したメールアドレス宛にクレデンシャルが届きます。これでサインアップ自体は完了します。東京リージョンで使用する場合には以下のようにap-northeast-1を指定してください。</p>\n\n\n\n<pre class=\"wp-block-code language-shellsession\"><code>momento account signup --email &lt;your email&gt; --region  ap-northeast-1</code></pre>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"ローカル環境から試してみる\">ローカル環境から試してみる</h2>\n\n\n\n<p>ローカル環境からCLI経由でキャッシュの読み書きを試してみましょう。最初にconfigureコマンドでCLIにクレデンシャル等のセットアップを行います。対話式でクレデンシャルやdefaultのTTLなどを設定していきます。</p>\n\n\n\n<pre class=\"wp-block-code language-shellsession\"><code>momento configure</code></pre>\n\n\n\n<p>その後、createコマンドでキャッシュストアをプロビジョニングすることで、直ぐに書き込みと読み込みのオペレーションが可能になります。</p>\n\n\n\n<pre class=\"wp-block-code language-shellsession\"><code>momento cache create --name example-cache\nmomento cache set --key key --value value --ttl 100 --name example-cache\nmomento cache get --key key --name example-cache</code></pre>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"lambda上で試してみる\">Lambda上で試してみる</h2>\n\n\n\n<p>では、Momentoを使って以下のような簡単なサンプルをAPI GatewayとLambda開発してみようと思います。</p>\n\n\n\n<ul><li>特定のキーでキャッシュがヒットしなければ、キャッシュをセットする</li><li>特定のキーでキャッシュがヒットすれば、その値をレスポンスする</li></ul>\n\n\n\n<p>2022/03/11現在Momentoは以下のSDKが公開されているようです。</p>\n\n\n\n<ul><li>JavaScript</li><li>Python</li><li>Java</li><li>.NET</li><li>Go</li><li>Rust(近日公開予定)</li></ul>\n\n\n\n<p>今回は<a href=\"https://github.com/momentohq/client-sdk-examples/blob/main/javascript/README.md\">JavaScript SDKのサンプル</a>に沿ってMomentoを動かしてみました。ソースコードは以下のとおりです。TTLを60秒に設定して、最初にキャッシュの有無を確認。存在しなければ、setメソッドでキャッシュを登録して、存在すればその値を返すという実装になっています。</p>\n\n\n\n<pre class=\"wp-block-code language-TypeScript\"><code>import type { ValidatedEventAPIGatewayProxyEvent } from '@libs/api-gateway';\nimport { formatJSONResponse } from '@libs/api-gateway';\nimport { middyfy } from '@libs/lambda';\nimport { SimpleCacheClient, CacheGetStatus } from \"@momento/sdk\";\n\n\nimport schema from './schema';\n\nconst hello: ValidatedEventAPIGatewayProxyEvent&lt;typeof schema&gt; = async (event) =&gt; {\n  // your authentication token for momento\n  const authToken = process.env.MOMENTO_AUTH_TOKEN;\n\n  // initializing momento\n  const DEFAULT_TTL = 60; // 60 seconds for default ttl\n  const momento = new SimpleCacheClient(authToken, DEFAULT_TTL);\n  const CACHE_NAME = \"example-cache-store\";\n\n  const res = await momento.get(CACHE_NAME, \"key\");\n  if (res.status === CacheGetStatus.Miss) {\n    await momento.set(CACHE_NAME, \"key\", \"example-value\");\n    return formatJSONResponse({\n      message: 'New cache data has been set.',\n    });\n  }\n\n  return formatJSONResponse({\n    message: 'The cache data was found.',\n    value: res.text(),\n  });\n};\n\nexport const main = middyfy(hello);</code></pre>\n\n\n\n<p>動作確認してみると以下のように意図通り動きました。</p>\n\n\n\n<h4 class=\"wp-block-heading\" id=\"キャッシュが見つからない場合\">キャッシュが見つからない場合</h4>\n\n\n\n<figure class=\"wp-block-image size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"1024\" height=\"169\" src=\"https://cdn.getshifter.co/f6642def64a63651c07142605e040674c5441f6d/uploads/2022/03/スクリーンショット-2022-03-11-12.34.26-1024x169.png\" alt=\"\" class=\"wp-image-452\" srcset=\"https://cdn.getshifter.co/f6642def64a63651c07142605e040674c5441f6d/uploads/2022/03/スクリーンショット-2022-03-11-12.34.26-1024x169.png 1024w, https://cdn.getshifter.co/f6642def64a63651c07142605e040674c5441f6d/uploads/2022/03/スクリーンショット-2022-03-11-12.34.26-300x50.png 300w, https://cdn.getshifter.co/f6642def64a63651c07142605e040674c5441f6d/uploads/2022/03/スクリーンショット-2022-03-11-12.34.26-768x127.png 768w, https://cdn.getshifter.co/f6642def64a63651c07142605e040674c5441f6d/uploads/2022/03/スクリーンショット-2022-03-11-12.34.26.png 1212w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure>\n\n\n\n<h4 class=\"wp-block-heading\" id=\"キャッシュが見つかった場合\">キャッシュが見つかった場合</h4>\n\n\n\n<figure class=\"wp-block-image size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"1024\" height=\"161\" src=\"https://cdn.getshifter.co/f6642def64a63651c07142605e040674c5441f6d/uploads/2022/03/スクリーンショット-2022-03-11-12.34.38-1024x161.png\" alt=\"\" class=\"wp-image-453\" srcset=\"https://cdn.getshifter.co/f6642def64a63651c07142605e040674c5441f6d/uploads/2022/03/スクリーンショット-2022-03-11-12.34.38-1024x161.png 1024w, https://cdn.getshifter.co/f6642def64a63651c07142605e040674c5441f6d/uploads/2022/03/スクリーンショット-2022-03-11-12.34.38-300x47.png 300w, https://cdn.getshifter.co/f6642def64a63651c07142605e040674c5441f6d/uploads/2022/03/スクリーンショット-2022-03-11-12.34.38-768x121.png 768w, https://cdn.getshifter.co/f6642def64a63651c07142605e040674c5441f6d/uploads/2022/03/スクリーンショット-2022-03-11-12.34.38.png 1236w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"まとめ\">まとめ</h2>\n\n\n\n<p>このようにMomentoを使えばAWS Lambdaからも簡単にキャッシュストアを構築して使うことが出来ます。また、そのためにVPCを構築したりと行った手間も全く発生しないので、このサービスはサーバーレスユーザーからすると非常に期待のサービスだと思います。</p>\n\n\n\n<p>これから日本での展開もやっていくとのことなので、皆さんも試してみて気になる点があれば、日本語でどんどんフィードバックを投げていってもらうと良いんじゃないでしょうか。</p>\n","author":{"name":"Takahiro Horike","description":"Co-founder and CEO of Serverless Operations, Inc","avatars":{"avatar96":"https://secure.gravatar.com/avatar/2ee9db3a5b6c492acf66ec14c8a5d8dc?s=96&d=mm&r=g"},"acf":{"userJpName":"堀家 隆宏","userRole":"CEO","facebook":"https://www.facebook.com/horike.takahiro","twitter":"https://twitter.com/horike37","github":"https://github.com/horike37"}},"date":"2022.03.11","path":"/blog/450/","featuredMedia":{"sourceUrl":"https://cdn.getshifter.co/f6642def64a63651c07142605e040674c5441f6d/uploads/2022/03/ImD_IR5F.jpeg","altText":"","mediaDetails":{"width":1200}},"categories":[{"id":"7","title":"Blog","path":"/category/blog/"}],"tags":[{"id":"64","title":"cache","path":"/tag/cache/"},{"id":"63","title":"Momento","path":"/tag/momento/"}]},"metadata":{"siteName":"Serverless Operations","siteDescription":"Serverless Operationsは、これまでグローバルの第一線で培ってきたクラウド技術（AWS − アマゾンウェブサービス）の豊富な実績と知見を活かし、お客さまのサーバーレスによる開発や運用の支援、コンサルティングまで一貫してサポート。サーバーレスに関するさまざまな課題を解決いたします。","siteUrl":"https://serverless.co.jp","siteOgImage":"https://serverless.co.jp/ogp.png"}},"context":{}}